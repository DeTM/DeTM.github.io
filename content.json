[{"title":"初体验Hexo+GitHub搭建个人博客","date":"2017-04-19T01:28:49.000Z","path":"2017/04/19/My-Blog/","text":"前言初入GitHub，发现GitHub Pages这个强大（免费+便捷）的搭建个人博客的功能。有个自己的空间，记录并分享在码农路上的知识总结和填坑经历，感觉是件很不错的事。便在网上各种查阅资料，磕磕碰碰地忙活了起来。或许是因为很多资料时间比较久远，加上自己是个新手小白，所以遇到了很多坑，所以决定自己总结下，也希望能帮助到其他需要的人。 正文 注：本文使用的是WIN7 64位的操作系统和Hexo3.3.1。 建立GitHub Pages 如果还没有GitHub账号，就先去注册一个，注册过程不在赘述。 新建GitHub仓库 选择主题 注：之所以叙述以上过程，是因为GitHub改版后，布局和操作有所改变，对于新手小白（例如我）来说网上很多参考资料中的步骤就无法按部就班了。 这样就建立了一个简单的GitHub Pages，访问前面你填写的GitHub-Name.github.io地址就可以看到创建的页面了。当然GitHub自带的模板或许并不能满足你需求，接下来将隆重为大家引入本文的主角Hexo。 搭建环境安装Git Git是一个版本管理工具，可以将我们生成的静态网页托管到GitHub上 直接去Git官网上下载，全程下一步安装。更详细的Git安装配置点这里 ， 安装完成后，右击鼠标可以看见多了两个选项。如果没有，可以前往Git安装根目录，启动git-base.exe即可。 安装Node.js直接去Node.js官网下载，全程下一步安装。更详细的Node.js安装配置教程点这里。 安装Hexo Hexo是一个基于Node.js的静态博客程序，可以方便的生成静态网页托管在Github上。并且有很多人为其制作了很多优秀的主题（theme），你可以根据自己的喜好进行设置。 点击Git Bash，执行以下代码，便安装完成了。 $ npm install hexo-cli -g 创建Hexo文件夹 找一个想要放置博客的文件夹，比如（D:\\Hexo） 在该目录下鼠标右击打开Git bash工具，（右键菜单中没有该选项的可以用cmd命令cd等进入该文件夹）。执行下面的语句，会在D:\\Hexo文件夹下创建node_modules文件夹： $ hexo init 安装工具包在Hexo目录下，执行以下命令，你会发现D:\\Hexo\\node_modules目录下多了好多文件夹。 $ npm install 本地测试在Hexo目录下，执行以下命令后，访问http://localhost:4000 ，就可以看见自己的博客界面了。 $ hexo generate$ hexo server 到这里我们就完成了Hexo静态博客本地环境搭建和生成静态博客，并且实现了本地访问，当然仅仅自己能访问这是远远不够的，接下我们将把生成的博客托管到GitHub上，让更多的人能够访问到。 托管到GitHub拷贝Https链接 先在你的仓库（GitHub-Name.github.io）中拷贝下这个https链接下面配置有用 修改Hexo配置文件 _config.yml在你的Hexo（如：D:\\Hexo）根目录下 打开_config.yml文件找到并修改成如下配置： deploy: type: git repository: https://github.com/DeTM/DeTM.github.io.git #此处替换为前面拷贝的https链接 branch: master 上传文件在Hexo根目录下执行以下命令后，在浏览器中访问你的GitHub pages路径（GitHub-Name.github.io），若能成功显示本地访问时的博客页面，即部署成功 $ hexo generate #保存并生成html，css等文件$ hexo deploy #上传到指定路径 注：若在$ hexo deploy中可能会出现ERROR Deployer not found: git 错误提示，是因为缺少hexo-deployer-git 插件，执行以下操作后，再次上传即可 在Hexo目录下执行以下命令，D:\\Hexo\\node_modules 文件夹中生成hexo-deployer-git 文件夹即可。 $ npm install hexo-deployer-git --save 更换主题 Hexo的默认主题是landscape，你如果不喜欢还有更多的主题供你选择，本博客选用的主题是yelee ，若想更换成其他主题同理。 安装yelee在Hexo目录下执行以下命令，或者直接将yelee下载到Hexo根目录下的themes目录里，解压并修改文件夹名字为yelee。 $ git clone https://github.com/MOxFIVE/hexo-theme-yelee.git themes/yelee 修改Hexo配置此处修改的是Hexo根目录下的_config.yml ，找到以下内容并修改，保存后再次上传即可。 # Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: yelee #你要使用的主题的名字 到这里，我们就已经在GitHub上部署了一个自己喜欢的主题的个人博客了，接下来将是对Hexo的使用和主题的优化。 使用Hexo 本文只列举一些常用的Hexo的使用方法，更详细的请见官方文档 写文章1）新建文章 当需要写文章时，在Hexo根目录下使用如下命令新建文章，会在D:\\Hexo\\source\\_posts文件夹中生成与 title 对应的 .md 文件 $ hexo new &quot;My New Post&quot; #引号内内容为&quot;文章标题&quot; .md 文件就是 markdown 格式的文章表述，格式大致如下。可以使用markdown编辑器对其编辑，本文推荐使用Typora ，其优点和使用方法见这里 。 title: My New Postdate: 2017-04-19 09:28:49--- # 分隔符以下为文章的markdown内容 注意：我在使用Typora的时候遇到一个小BUG，就是保存文件上传后无法显示所写的文章，以为是编码的问题，但是修改为UTF-8后也没效果。所以我每次在使用Typora编辑保存文件后，会使用EditPlus再打开保存一次，即可解决。 2）插入标签和分类 在.md文件中加入以下类容 categories: [1级类,2级类,3级类] #类别有顺序等级tags: [标签1,标签2,标签3] #标签无序--- #在分隔符以上插入 3）插入图片 Typora支持直接将图片拖入，或者键入以下内容 ![图片名称](图片URL) 图片的来源有三种方式：一是直接放入博客源文件中，二是使用网上图片链接，三是本地存入云空间后获取访问链接。 本人考虑到放入博客源文件中后，随着图片数量的增加上传和加载速度都会大大受影响，而且若是将来使用自己的服务器迁移时可能会导致数据丢失，博客崩溃，网上的图片链接也有可能会存在数据丢失的情况，所以最终决定使用第三种方法。本人采用的是七牛云 来存储图片，七牛云的使用方法请参考这里 ，将七牛云中存储的图片的外链加入括号中即可。 发布 搭建好博客后，后期的更新和发布就简单了，常用的有以下四个命令 命令 作用 简写$ hexo clean #清空已生成的所有静态文件 $ hexo generate #保存并解析.md文件生成静态文件 $ hexo g$ hexo server #可以实时动态访问已生成的静态文件 $ hexo s$ hexo deploy #用指定方式上传到指定路径 $ hexo d 主题优化配置 yelee有非常详细的使用说明书 ，以下所罗列的是我在配置过程中有所卡壳或是说明书中没有写的地方 站内搜索执行下面命令，安装 hexo-generator-search 插件 $ npm install hexo-generator-search --save 在Hexo根目录下的_config.yml中添加如下代码： search: path: search.xml field: all # 如只想索引文章，可设置为post 在yelee根目录下的中添加如下代码： # Local Site Search | 本地站内搜索search: on: true #true为开启站内搜索，false关闭 onload: false #true为页面加载时就获取search.xml中内容， #false为向search框内输入查询信息时才获取search.xml中内容 RSS RSS(Really Simple Syndication)是一种描述和同步网站内容的格式，是使用最广泛的XML应用，想了解更多请看详细介绍。 执行下面命令，安装 hexo-generator-feed $ npm install hexo-generator-feed --save 在Hexo根目录下的_config.yml中添加如下代码： feed: type: atom path: atom.xml limit: 20 在yelee根目录下的_config.yml中添加如下代码： # Customize feed link 自定义订阅地址rss: /atom.xml 更换背景 yelee主题的新特性之一是博客随机更换背景图片，而yelee自带的图片或许你不太满意，可以进行如下操作进行更换 在 D:\\Hexo\\themes\\yelee\\source\\background 文件夹中有五张图片，这五张图片就是yelee自带的随机背景图，你可以按自己需求放入五张自己喜欢的图片，但是必须以它的格式命名即可。 更换边栏顶部颜色 yelee主题的左边栏的顶部的颜色也是随机变化的，而你或许对其自带的颜色不太满意，可以进行如下操作进行更换 在D:\\Hexo\\themes\\yelee\\source\\js 中找到main.js 文件，打开找到如下代码 // Random Color 边栏顶部随机颜色var colorList = [\"#6da336\", \"#4d4d4d\", \"#66CC66\", \"#99CC99\", \"#76becc\", \"#76becc\", \"#c99979\", \"#000013\", \"#4d4d4d\"];//引号中的是\"颜色代码\" 你可以在EditPlus等类似的超文本编辑软件中新建一个HTML文件，选择喜欢的颜色获取颜色代码，用以替代上面的颜色代码。 到这里我们已经有了一个简单的个性化博客，并且学会了如何在上面发布内容，除以上所述外还可以添加更多功能，这将在后续中说明。而目前为了使我们的博客更加个性化，我决定申请一个域名并CNAME解析到博客上，使用自己的域名来访问博客。 解析域名注册域名 注册域名的渠道有很多，例如阿里云 、腾讯云 等，我是在阿里云上注册的，详细流程在这里 。 CNAME解析1）按下图操作，在阿里云上添加解析 2）按下图在GitHub中保存你的域名 完成以上步骤，一般解析时间在10分钟左右，解析完成后就可以通过域名访问你的博客了 总结 利用GitHub+Hexo搭建一个简单的个人博客并不是一件困难的事，但对于新手小白（例如我）来说确实是一件毫无头绪且繁琐的事，在搭建的过程学到了很多新技能，同时也提高了学习能力，加强了耐心。当然这只是一个简单的入门，我们还可以让个人博客变得更好，这需要充足的耐心和实践，后续中将会讲到对博客的进一步优化计划。 工具1）Git 2.12.2 2）Node.Js 7.9.0 3）Typora 0.9.27 4）EditPlus 3.3.1 参考利用Github Page 搭建个人博客网站 Git+Hexo搭建静态博客网站 在Github上面搭建Hexo博客（一）：部署到Github 使用Hexo搭建博客（三），博客配置、主题和写作 【Hexo】Hexo+Github构建个人博客 （五）：错误集 Yelee —— 简而不减 Hexo 双栏博客主题 启用Hexo开源博客系统 后续 在利用GitHub搭建博客的过程中，想到GitHub这个所谓的托管平台其实就相当于一个远程服务器，我可不可以将博客部署到自己的服务器上呢？这样岂不是能更加自由的进行开发么？于是再次各种查阅资料，看了很多别人的博客系统，发现还可以给博客增加配置评论区域、百度搜索、谷歌搜索等优化。便在阿里云上花了9块9租了一个服务器（学生优惠），开始自己搭建环境，搭得差不多了，尝试测试用域名绑定服务器IP访问时，提示我需要备案，于是又开始折腾备案，申请、初审、再审，好不容易提交到管局，无奈预计需要20天才能完成备案（此刻已崩溃= =、）。那就开始漫长的等待吧，便先记录下了博客初期的一些过程，备案完成后将继续完善优化我的博客。","tags":[{"name":"Git","slug":"Git","permalink":"http://www.cpfblog.me/tags/Git/"},{"name":"Hexo","slug":"Hexo","permalink":"http://www.cpfblog.me/tags/Hexo/"}]}]